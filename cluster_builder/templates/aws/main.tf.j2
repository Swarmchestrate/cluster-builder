provider "aws" {
  region     = "{{ aws_region }}"
  access_key = "{{ aws_access_key }}"
  secret_key = "{{ aws_secret_key }}"
}

locals {
  cluster_name = "{{ cluster_name }}"
  random_name  = "{{ random_name }}"
}

# Common variables for HA and worker nodes (Only define for non-master roles)
{% if k3s_role != "master" %}
variable "master_ip" {
  description = "Master node IP"
  type        = string
}

variable "cluster_name" {
  description = "The name of the cluster"
  type        = string
}

{% endif %}

# Role-specific resource creation
resource "aws_instance" "k3s_node" {
  ami                    = "{{ ami }}"
  instance_type          = "{{ instance_type }}"
  key_name               = "{{ ssh_key_name }}"
  vpc_security_group_ids = [
    aws_security_group.k3s_security_group.id  # Referencing the security group here
  ]

  user_data = templatefile(
  "{% if k3s_role == 'master' %}master_user_data.sh.tpl{% elif k3s_role == 'ha' %}ha_user_data.sh.tpl{% else %}worker_user_data.sh.tpl{% endif %}",
  {
    k3s_token = "{{ k3s_token }}"
    {% if k3s_role != "master" %}
    master_ip = var.master_ip
    {% endif %}
    cluster_name = local.cluster_name
    random_name = local.random_name
  }
)


  tags = {
    Name        = "K3s-{{ k3s_role == 'master' and 'Master-Node' or (k3s_role == 'ha' and 'HA-Server' or 'Worker-Node') }}-{{ cluster_name }}-{{ random_name }}"
    ClusterName = local.cluster_name
  }
}

{% if k3s_role == "master" %}
output "cluster_name" {
  description = <<EOF
The unique cluster name
EOF
  value = local.cluster_name
}

output "master_ip" {
  description = <<EOF
The public IP of the master node
EOF
  value = aws_instance.k3s_node.public_ip
}
{% endif %}
